[{"name":"app.R","content":"library(shiny)\nlibrary(ggplot2)\nlibrary(DT)\nlibrary(glue)\nlibrary(shinythemes)\nlibrary(bslib)\nlibrary(shinylive)\n\n\nshinylive::export(appdir = \".\",destdir=\"docs\")\n\nthematic_shiny(font=\"auto\")\n\n# Interface utilisateur (UI)\nui <- fluidPage(\n  theme = bs_theme(version = 5, bootswatch = \"minty\"),\n  titlePanel(\"Exploration des Diamants\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      selectInput(inputId = \"filter_color\", \n                  label = \"Filtrer par couleur :\", \n                  choices = unique(diamonds$color), \n                  selected = \"G\"),\n      \n      sliderInput(inputId = \"max_price\", \n                  label = \"Prix maximum :\", \n                  min = 300, \n                  max = 20000, \n                  value = 3444, \n                  step = 100),\n      \n      radioButtons(inputId = \"color_rose\", \n                   label = \"Colorier les points en rose ?\", \n                   choices = c(\"Oui\" = TRUE, \"Non\" = FALSE), \n                   selected = TRUE),\n      \n      actionButton(inputId = \"show_notification\", \n                   label = \"Afficher une notification\")\n    ),\n    \n    mainPanel(\n      plotOutput(outputId = \"scatter_plot\"),\n      DTOutput(outputId = \"data_table\")\n    )\n  )\n)\n\n# Serveur\nserver <- function(input, output, session) {\n  filtered_data <- reactive({\n    subset(diamonds, \n           color == input$filter_color & \n             price <= input$max_price)\n  })\n  \n  # Affichage du nuage de points\n  output$scatter_plot <- renderPlot({\n    p <- ggplot(filtered_data(), aes(x = carat, y = price)) +\n      geom_point(alpha = 0.6, color = ifelse(input$color_rose, \"pink\", \"black\")) +\n      labs(title = glue(\"Prix max: {input$max_price} | Couleur: {input$filter_color}\"),\n           x = \"Carat\",\n           y = \"Prix\") +\n      theme_minimal() +\n      theme(plot.background = element_rect(fill = \"gray98\"))\n    \n    p\n  })\n  \n  # Affichage du tableau interactif\n  output$data_table <- renderDT({\n    datatable(filtered_data(), \n              options = list(pageLength = 10, scrollX = TRUE))\n  })\n  \n  # Notification lors du clic sur le bouton\n  observeEvent(input$show_notification, {\n    showNotification(glue(\"Prix max: {input$max_price} | Couleur: {input$filter_color}\"),\n                     type = \"message\")\n  })\n}\n\n# Lancer l'application Shiny\nshinyApp(ui = ui, server = server)\n","type":"text"},{"name":"project.Rproj","content":"Version: 1.0\n\nRestoreWorkspace: Default\nSaveWorkspace: Default\nAlwaysSaveHistory: Default\n\nEnableCodeIndexing: Yes\nUseSpacesForTab: Yes\nNumSpacesForTab: 2\nEncoding: UTF-8\n\nRnwWeave: Sweave\nLaTeX: pdfLaTeX\n","type":"text"}]
